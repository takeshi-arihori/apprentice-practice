@startuml

class Main {
}

class Game {
  -player: Player
  -dealer: Dealer
  -deck: Deck
  +startGame()
  +playerDraws()
  +dealerDraws()
  +displayPlayerHand()
  +displayDealerHand()
  +showResult()
}

class Card {
  -suit: String
  -value: String
  -rank: int
  +Card(suit: String, value: String, rank: int)
  +getSuit(): String
  +getValue(): String
  +getRank(): int
  +setSuit(suit: String)
  +setValue(value: String)
  +setRank(rank: int)
  +toString(): String
}

class Deck {
  -deck: ArrayList<Card>
  +getDeck(): ArrayList<Card>
  +setDeck()
  +generateDeck(): ArrayList<Card>
  +shuffleDeck()
  +draw(): Card
}

class Winner {
  +shouldDealerDraw(dealer: Dealer): boolean
  +isNotBust(human: Human): boolean
  +isWinner(player: Player, dealer: Dealer): String
}

abstract class Human {
  -hand: ArrayList<Card>
  -playerName: String
  +Human(name: String)
  +getHand(): List<Card>
  +getPlayerName(): String
  +setCard(card: Card)
  +setPlayerName(playerName: String)
  +getHandTotal(): int
  +display()
}

class Player {
  +Player(name: String)
}

class Dealer {
  +Dealer(name: String)
  +Dealer()
}

Main -- Game
Game -- Player
Game -- Dealer
Game -- Deck
Player --|> Human
Dealer --|> Human
Game -- Winner
Deck --> Card

@enduml
